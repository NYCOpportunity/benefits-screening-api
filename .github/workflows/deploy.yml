name: Deploy Lambda Function

on:
  push:
    branches: [ prod, stg ]

env:
  AWS_REGION: us-east-1
  LAMBDA_FUNCTION_NAME_PROD: benefits-screening-api-prod # TODO: change to new prod name once it's created
  LAMBDA_FUNCTION_NAME_STG: Benefits-Screening-API-stg

permissions:
  contents: read
  id-token: write

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install production dependencies
      run: uv sync --no-dev

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Create deployment package
      run: |
        # Create a clean directory for the package
        mkdir -p package
        
        # Export dependencies to package directory
        uv export --no-dev --format requirements-txt > requirements.txt
        pip install -r requirements.txt -t package/
        
        # Copy your source code WITH folder structure preserved
        cp -r src package/
        
        # Create zip file
        cd package
        zip -r ../lambda-deployment.zip . -x "*.pyc" "*__pycache__*" "*.git*" "*.github*" "tests/*" "test_*"
        cd ..

    - name: Deploy to Production Lambda
      run: |
        aws lambda update-function-code \
          --function-name benefits-screening-api-prod \
          --zip-file fileb://lambda-deployment.zip

    - name: Update Production Lambda configuration
      run: |
        aws lambda update-function-configuration \
          --function-name benefits-screening-api-prod \
          --handler src.main.main \
          --environment Variables="{
            ENVIRONMENT=production,
            LOG_LEVEL=INFO
          }" \
          --timeout 30 \
          --memory-size 512 \
          --runtime python3.13

    - name: Wait for function update
      run: |
        aws lambda wait function-updated \
          --function-name benefits-screening-api-prod

  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/stg' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install production dependencies
      run: uv sync --no-dev

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Create deployment package
      run: |
        mkdir -p package
        uv export --no-dev --format requirements-txt > requirements.txt
        pip install -r requirements.txt -t package/
        
        # Copy your source code WITH folder structure preserved
        cp -r src package/
        
        cd package
        zip -r ../lambda-deployment.zip . -x "*.pyc" "*__pycache__*" "*.git*" "*.github*" "tests/*" "test_*"
        cd ..

    - name: Deploy to Staging Lambda
      run: |
        aws lambda update-function-code \
          --function-name Benefits-Screening-API-stg \
          --zip-file fileb://lambda-deployment.zip

    - name: Update Staging Lambda configuration
      run: |
        aws lambda update-function-configuration \
          --function-name Benefits-Screening-API-stg \
          --handler src.main.main \
          --environment Variables="{
            ENVIRONMENT=staging,
            LOG_LEVEL=DEBUG
          }" \
          --timeout 60 \
          --memory-size 256 \
          --runtime python3.13

    - name: Wait for function update
      run: |
        aws lambda wait function-updated \
          --function-name Benefits-Screening-API-stg